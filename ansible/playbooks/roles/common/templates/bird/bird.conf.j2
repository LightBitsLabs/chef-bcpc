router id {{ interfaces['service']['ip'] }};

log syslog { info, remote, warning, error, auth, fatal, bug };

filter to_tor {
  if net != 127.0.0.0/8 then accept;
  reject;
}

filter from_tor {
  if net = 0.0.0.0/0 then accept;
  reject;
}

filter to_kernel {
  krt_prefsrc = {{ interfaces['service']['ip'] }};
  if net = 0.0.0.0/0 then accept;
  reject;
}

protocol kernel {
  learn;          # Learn all alien routes from the kernel
  persist;        # Don't remove routes on bird shutdown
  scan time 2;    # Scan kernel routing table every 2 seconds
  merge paths on;
  graceful restart;
  export filter to_kernel;
  import none;
}

protocol direct {
  interface "*";
}

protocol device {
  scan time 2;
}

{% for transit in interfaces['transit'] %}
protocol bgp {
  multihop;
  next hop self;
  graceful restart;
  local {{ transit['cidr'] | ipaddr('address') }} as {{ bgp['asn'] }};
  neighbor {{ transit['neighbor']['ip'] }} as {{ transit['neighbor']['asn'] }};
  import filter from_tor;
  export filter to_tor;
}

{% endfor %}

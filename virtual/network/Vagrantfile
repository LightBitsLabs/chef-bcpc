# -*- mode: ruby -*-
# vi: set ft=ruby :
base_box = 'bento/ubuntu-18.04'

# Load some other vagrantfiles, user libs
current_dir = File.expand_path File.dirname(__FILE__)
libdir = File.join current_dir, 'lib'
Dir.foreach(libdir) {|f|
  # Check extensions?
  libpath = File.join libdir, f
  load libpath if File.ftype(libpath) == 'file'
}

def setup_proxy(node)
  http_proxy  = ENV['http_proxy']  || ''
  https_proxy = ENV['https_proxy'] || ''
  if http_proxy != ''
    node.vm.provision 'shell', path: 'proxyconfig.sh', args: [http_proxy, https_proxy]
  end
end

Vagrant.configure(2) do |config|
  if ENV['DEPLOY_NETWORK_VM'] == 'true'

    config.vm.define 'network' do |node|
      config.vm.provider 'virtualbox' do |vb|
        vb.name = 'network'
        vb.memory = 1024
      end
      node.vm.hostname = 'network'
      node.vm.box = base_box
      node.vm.box_download_insecure = true

      node.vm.network 'private_network', virtualbox__intnet: generate_network_name('management1'), auto_config: false
      node.vm.network 'private_network', virtualbox__intnet: generate_network_name('management2'), auto_config: false
      node.vm.network 'private_network', virtualbox__intnet: generate_network_name('management3'), auto_config: false

      setup_proxy(node)
      node.vm.provision 'shell', path: 'provisioner.sh', args: 'network'
    end

  else

    # Create 3 TORs
    (1..3).each do |i|
      config.vm.define "tor#{i}" do |node|
        config.vm.provider 'virtualbox' do |vb|
          vb.name = "tor#{i}"
          vb.memory = 512
        end
        node.vm.box = base_box
        node.vm.box_download_insecure = true
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("tor#{i}_spine1"), auto_config: false
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("tor#{i}_spine2"), auto_config: false
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("tor#{i}_hv"), auto_config: false
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("management#{i}"), auto_config: false
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("storage#{i}"), auto_config: false
        setup_proxy(node)
        node.vm.provision 'shell', path: 'provisioner.sh', args: "tor#{i}"
        node.vm.hostname = "tor#{i}"
      end
    end

    # Create 2 spines
    (1..2).each do |i|
      config.vm.define "spine#{i}" do |node|
        config.vm.provider 'virtualbox' do |vb|
          vb.name = "spine#{i}"
          vb.memory = 512
        end
        node.vm.box = base_box
        node.vm.box_download_insecure = true
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("tor1_spine#{i}"), auto_config: false
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("tor2_spine#{i}"), auto_config: false
        node.vm.network 'private_network', virtualbox__intnet: generate_network_name("tor3_spine#{i}"), auto_config: false
        setup_proxy(node)
        node.vm.provision 'shell', path: 'provisioner.sh', args: "spine#{i}"
        node.vm.hostname = "spine#{i}"
      end
    end

  end
end

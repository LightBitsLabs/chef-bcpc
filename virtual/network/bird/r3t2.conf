log syslog all;

router id 10.129.3.17;

define DEFAULT = 0.0.0.0/0;

filter to_kernel
prefix set to_kernel_nets;
{
    to_kernel_nets = [
        # tenant network
        10.1.0.0/16{32,32},
        # loopback network
        10.65.0.0/24{32,32},
        # transit network
        10.129.3.16/28
    ];

    if net ~ to_kernel_nets then accept;
    if net = DEFAULT then accept;
    reject;
}

filter from_kernel
prefix set from_kernel_nets;
{
    from_kernel_nets = [
        # transit network
        10.129.3.16/28
    ];

    if net ~ from_kernel_nets then accept;
    reject;
}

filter to_spine
prefix set to_spine_nets;
{
    to_spine_nets = [
        # tenant network
        10.1.0.0/16{32,32},
        # loopback network
        10.65.0.0/24{32,32},
        # transit network
        10.129.3.16/28
    ];
    if net ~ to_spine_nets then accept;
    reject;
}

filter from_spine {
    accept;
}

filter to_node {
    if net = DEFAULT then accept;
    reject;
}

filter from_node
prefix set from_node_nets;
{
    from_node_nets = [
        # tenant network
        10.1.0.0/16{32,32},
        # loopback network
        10.65.0.0/24{32,32},
        # transit network
        10.129.3.16/28
    ];
    if net ~ from_node_nets then accept;
    reject;
}

# The Device protocol is not a real routing protocol. It doesn't generate any
# routes and it only serves as a module for getting information about network
# interfaces from the kernel.
protocol device {
    scan time 60;
}

protocol direct {
    interface "-eth0", "*";
}

# The Kernel protocol is not a real routing protocol. Instead of communicating
# with other routers in the network, it performs synchronization of BIRD's
# routing tables with the OS kernel.
protocol kernel {
    persist;
    scan time 60;
    merge paths on;
    export all;
    import all;
}


protocol bgp spine1 {
    local as 4200858232;
    neighbor 172.16.1.10 as 4200858300;
    export all;
    import all;
}

protocol bgp spine2 {
    local as 4200858232;
    neighbor 172.16.2.10 as 4200858300;
    export all;
    import all;
}

protocol bgp r3n1 {
    local as 4200858132;
    neighbor 10.129.3.19 as 4200858000;
    export filter to_node;
    import filter from_node;
}

protocol bgp r3n2 {
    local as 4200858132;
    neighbor 10.129.3.20 as 4200858000;
    export filter to_node;
    import filter from_node;
}
